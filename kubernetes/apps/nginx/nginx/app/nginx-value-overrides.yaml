apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-value-overrides
  namespace: nginx
data:
  values.yaml: |
    ingress: 
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /$1
        external-dns.kubernetes.io/target: proxy.lazebny.io
      hostname: proxy.lazebny.io
      path: /(.*)
      pathType: Prefix
    service:
      type: ClusterIP
    serverBlock: |-
      server {
        server_name proxy.lazebny.io;
        listen 0.0.0.0:8080;

        location ~ /discord/(.*) {
          proxy_pass https://discord.com/$1;
          resolver 1.1.1.1;
          proxy_set_header Host discord.com;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          # Add the necessary CORS headers
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

          # Optional: Allow CORS preflight requests
          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
          }
        }

        location /discord-ws/ {
          proxy_pass https://gateway.discord.gg;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host gateway.discord.gg;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # Add the necessary CORS headers
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

          # Optional: Allow CORS preflight requests
          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
          }
        }

        location /discord-cdn/ {
          proxy_pass https://cdn.discordapp.com/;
          resolver 1.1.1.1;
          proxy_set_header Host cdn.discordapp.com;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;

          # Add the necessary CORS headers
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
          add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

          # Optional: Allow CORS preflight requests
          if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
          }
        }
      }
