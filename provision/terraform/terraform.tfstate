{
  "version": 4,
  "terraform_version": "1.4.6",
  "serial": 29,
  "lineage": "c7d5de45-d181-34fd-a7ec-df1a033cfe48",
  "outputs": {
    "kubeconfig": {
      "value": "apiVersion: v1\nkind: Config\nclusters:\n- name: talos-hloud-cluster\n  cluster:\n    server: https://167.235.107.29:6443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\nusers:\n- name: admin@talos-hloud-cluster\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJnekNDQVNxZ0F3SUJBZ0lRVUFsWGFEVkZFcUVFUVVGSkVtM20yakFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd016RXdORm9YRFRJME1EVXlNakl3TXpFdwpORm93S1RFWE1CVUdBMVVFQ2hNT2MzbHpkR1Z0T20xaGMzUmxjbk14RGpBTUJnTlZCQU1UQldGa2JXbHVNRmt3CkV3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRm9pUlpUZ2U2UWl3SnpndDRvRnFnSXVsZFpyMVRFQm8KTXptaTVyVGNpZHAwcFBtaEIwbUYvWXVENGYrV1ZsSjlBVUJ6L1E1YlVIN2lYL1F2REJkNFg2TklNRVl3RGdZRApWUjBQQVFIL0JBUURBZ1dnTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01COEdBMVVkSXdRWU1CYUFGTjlFCjZYQzJPQUVURk9zZHpSSWIzbXcwMWoxZ01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lCeGEveXI3dGZkZS9NRmsKNmxxQ29OeUswRENpUzVwczlXak9PeTN0OGl0WEFpQStMN1ZwVUluWHJraEZrZWFXWFlONStMZFJmMTFBTFZ3bAo4UHJlRUZGTWJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n    client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUttSEs1REtQYnBRWFJmNFQwRVY0Tk5pODJjTWQwaVNkSTZwaWJEdnpqRWVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm9pUlpUZ2U2UWl3SnpndDRvRnFnSXVsZFpyMVRFQm9Nem1pNXJUY2lkcDBwUG1oQjBtRgovWXVENGYrV1ZsSjlBVUJ6L1E1YlVIN2lYL1F2REJkNFh3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: talos-hloud-cluster\n    namespace: default\n    user: admin@talos-hloud-cluster\n  name: admin@talos-hloud-cluster\ncurrent-context: admin@talos-hloud-cluster\n",
      "type": "string",
      "sensitive": true
    },
    "talosconfig": {
      "value": "context: talos-hloud-cluster\ncontexts:\n    talos-hloud-cluster:\n        endpoints:\n            - 167.235.107.29\n        ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEJsUEhZSkhmWlo5ZFluM0VUeW5MZXRNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTh2V0V2ZmhueW1SVjl6dnp6WSt4eVlJMmxRVFR3UlRXCk5ObTQ1M1Nad1UyalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU1MzdnIxQkJSQ1FXKzM5L0RCYUxtMFpNVjhaekFGQmdNclpYQURRUUJjKzhDTQpEejVVQW1uOVNHa0xlZFhYbmovbWpYbG1zUEZEU3ROdzRraWlhcTA0anFKMFNMWjhRQklENDhzV1ByUytJRy9OCkNoQnd3R2xHcXR6UHpKRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3kxYmh2bDc5RWV4MW0rdG4vMGJyajRzcDdPRWJ1QjNxbWxWb3pyMm9SZAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n",
      "type": "string",
      "sensitive": true
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "talos_client_configuration",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEJsUEhZSkhmWlo5ZFluM0VUeW5MZXRNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTh2V0V2ZmhueW1SVjl6dnp6WSt4eVlJMmxRVFR3UlRXCk5ObTQ1M1Nad1UyalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU1MzdnIxQkJSQ1FXKzM5L0RCYUxtMFpNVjhaekFGQmdNclpYQURRUUJjKzhDTQpEejVVQW1uOVNHa0xlZFhYbmovbWpYbG1zUEZEU3ROdzRraWlhcTA0anFKMFNMWjhRQklENDhzV1ByUytJRy9OCkNoQnd3R2xHcXR6UHpKRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3kxYmh2bDc5RWV4MW0rdG4vMGJyajRzcDdPRWJ1QjNxbWxWb3pyMm9SZAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "cluster_name": "talos-hloud-cluster",
            "endpoints": [
              "167.235.107.29"
            ],
            "id": "talos-hloud-cluster",
            "nodes": null,
            "talos_config": "context: talos-hloud-cluster\ncontexts:\n    talos-hloud-cluster:\n        endpoints:\n            - 167.235.107.29\n        ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEJsUEhZSkhmWlo5ZFluM0VUeW5MZXRNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTh2V0V2ZmhueW1SVjl6dnp6WSt4eVlJMmxRVFR3UlRXCk5ObTQ1M1Nad1UyalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU1MzdnIxQkJSQ1FXKzM5L0RCYUxtMFpNVjhaekFGQmdNclpYQURRUUJjKzhDTQpEejVVQW1uOVNHa0xlZFhYbmovbWpYbG1zUEZEU3ROdzRraWlhcTA0anFKMFNMWjhRQklENDhzV1ByUytJRy9OCkNoQnd3R2xHcXR6UHpKRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3kxYmh2bDc5RWV4MW0rdG4vMGJyajRzcDdPRWJ1QjNxbWxWb3pyMm9SZAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_cluster_kubeconfig",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEJsUEhZSkhmWlo5ZFluM0VUeW5MZXRNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTh2V0V2ZmhueW1SVjl6dnp6WSt4eVlJMmxRVFR3UlRXCk5ObTQ1M1Nad1UyalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU1MzdnIxQkJSQ1FXKzM5L0RCYUxtMFpNVjhaekFGQmdNclpYQURRUUJjKzhDTQpEejVVQW1uOVNHa0xlZFhYbmovbWpYbG1zUEZEU3ROdzRraWlhcTA0anFKMFNMWjhRQklENDhzV1ByUytJRy9OCkNoQnd3R2xHcXR6UHpKRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3kxYmh2bDc5RWV4MW0rdG4vMGJyajRzcDdPRWJ1QjNxbWxWb3pyMm9SZAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "endpoint": "91.107.214.111",
            "id": "talos-hloud-cluster",
            "kubeconfig_raw": "apiVersion: v1\nkind: Config\nclusters:\n- name: talos-hloud-cluster\n  cluster:\n    server: https://167.235.107.29:6443\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\nusers:\n- name: admin@talos-hloud-cluster\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJnekNDQVNxZ0F3SUJBZ0lRVUFsWGFEVkZFcUVFUVVGSkVtM20yakFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd016RXdORm9YRFRJME1EVXlNakl3TXpFdwpORm93S1RFWE1CVUdBMVVFQ2hNT2MzbHpkR1Z0T20xaGMzUmxjbk14RGpBTUJnTlZCQU1UQldGa2JXbHVNRmt3CkV3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRm9pUlpUZ2U2UWl3SnpndDRvRnFnSXVsZFpyMVRFQm8KTXptaTVyVGNpZHAwcFBtaEIwbUYvWXVENGYrV1ZsSjlBVUJ6L1E1YlVIN2lYL1F2REJkNFg2TklNRVl3RGdZRApWUjBQQVFIL0JBUURBZ1dnTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01COEdBMVVkSXdRWU1CYUFGTjlFCjZYQzJPQUVURk9zZHpSSWIzbXcwMWoxZ01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lCeGEveXI3dGZkZS9NRmsKNmxxQ29OeUswRENpUzVwczlXak9PeTN0OGl0WEFpQStMN1ZwVUluWHJraEZrZWFXWFlONStMZFJmMTFBTFZ3bAo4UHJlRUZGTWJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n    client-key-data: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUttSEs1REtQYnBRWFJmNFQwRVY0Tk5pODJjTWQwaVNkSTZwaWJEdnpqRWVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm9pUlpUZ2U2UWl3SnpndDRvRnFnSXVsZFpyMVRFQm9Nem1pNXJUY2lkcDBwUG1oQjBtRgovWXVENGYrV1ZsSjlBVUJ6L1E1YlVIN2lYL1F2REJkNFh3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\ncontexts:\n- context:\n    cluster: talos-hloud-cluster\n    namespace: default\n    user: admin@talos-hloud-cluster\n  name: admin@talos-hloud-cluster\ncurrent-context: admin@talos-hloud-cluster\n",
            "kubernetes_client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJnekNDQVNxZ0F3SUJBZ0lRVUFsWGFEVkZFcUVFUVVGSkVtM20yakFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd016RXdORm9YRFRJME1EVXlNakl3TXpFdwpORm93S1RFWE1CVUdBMVVFQ2hNT2MzbHpkR1Z0T20xaGMzUmxjbk14RGpBTUJnTlZCQU1UQldGa2JXbHVNRmt3CkV3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRm9pUlpUZ2U2UWl3SnpndDRvRnFnSXVsZFpyMVRFQm8KTXptaTVyVGNpZHAwcFBtaEIwbUYvWXVENGYrV1ZsSjlBVUJ6L1E1YlVIN2lYL1F2REJkNFg2TklNRVl3RGdZRApWUjBQQVFIL0JBUURBZ1dnTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01COEdBMVVkSXdRWU1CYUFGTjlFCjZYQzJPQUVURk9zZHpSSWIzbXcwMWoxZ01Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lCeGEveXI3dGZkZS9NRmsKNmxxQ29OeUswRENpUzVwczlXak9PeTN0OGl0WEFpQStMN1ZwVUluWHJraEZrZWFXWFlONStMZFJmMTFBTFZ3bAo4UHJlRUZGTWJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUttSEs1REtQYnBRWFJmNFQwRVY0Tk5pODJjTWQwaVNkSTZwaWJEdnpqRWVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRm9pUlpUZ2U2UWl3SnpndDRvRnFnSXVsZFpyMVRFQm9Nem1pNXJUY2lkcDBwUG1oQjBtRgovWXVENGYrV1ZsSjlBVUJ6L1E1YlVIN2lYL1F2REJkNFh3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=",
              "host": "https://167.235.107.29:6443"
            },
            "node": "91.107.214.111",
            "timeouts": null,
            "wait": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_machine_configuration",
      "name": "controlplane",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_endpoint": "https://167.235.107.29:6443",
            "cluster_name": "talos-hloud-cluster",
            "config_patches": [
              "machine:\n  kubelet:\n    nodeIP:\n      validSubnets:\n        - 10.0.0.0/24\n  certSANs:\n      - 167.235.107.29\n  # Setup hetzner ntp server.\n  time:\n  #     disabled: false # Indicates if the time service is disabled for the machine.\n  #     # Specifies time (NTP) servers to use for setting the system time.\n      servers:\n          - ntp1.hetzner.de\n          - ntp2.hetzner.com\n          - ntp3.hetzner.net\n          - 0.de.pool.ntp.org\n          - 1.de.pool.ntp.org\n          - time.cloudflare.com\n"
            ],
            "docs": true,
            "examples": true,
            "id": "talos-hloud-cluster",
            "kubernetes_version": "1.27.1",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: oz564y.xjqzal80qp4tmc6k # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3JadzI3WDRVK3R5OWJRUTdRV05pUEtONG5QSjRYdkNhbjBaVlFIN1dHNAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs:\n        - 167.235.107.29\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.27.1 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        nodeIP:\n            # The `validSubnets` field configures the networks to pick kubelet node IP from.\n            validSubnets:\n                - 10.0.0.0/24\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example\n        #       type: bind\n        #       source: /var/lib/example\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: eth0 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.4.0 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's time settings.\n    time:\n        # Specifies time (NTP) servers to use for setting the system time.\n        servers:\n            - ntp1.hetzner.de\n            - ntp2.hetzner.com\n            - ntp3.hetzner.net\n            - 0.de.pool.ntp.org\n            - 1.de.pool.ntp.org\n            - time.cloudflare.com\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: tOqcD_DCf7DanEZj_BWwVdf3ZcxrMsBIaO2tIHYIZtw= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: O4TwUV1Hg9zZuRG5wVtQPx6iK3m0am7n/WKxUa290DA= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://167.235.107.29:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: talos-hloud-cluster # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: laesce.l7vllw2liq73cirn # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: h5peiJEHiNZcgNaoy4GiDnnBGyl1R2Yl36or2zIlBZI= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVAvK1Z2d3B3N3ZWNWpIbjMzc0pSVTBsTW1qQXg0WkJPMEx1UnVoeTd5YmFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaTJWY1F2cGdKQzRtUERGQWRUbGNLSU44enZ6RTVrK3hZTWhqWHpGaWhSMmE4MjQ0aE05ZworUXdlbUU1Y3h2aHp5TEFjVVludjh2NExSeWlDRUtlclVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQU9WVFBmQmZmaGpQdFNIZUxwNFk4Vmd3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJrNXNSL0lOS21reC9CQkVEb0UvSjhwRHc3SGRpRjc0a1RFQ0svdlRXc1FQMGw2QlV1CkdvQW5yYWpDOUNINUIvLzJ3TmtHTE50S0JxNXh3N1Y5bytPMG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTHZRRUxJRFlTR2lxaG8ycG5lZTg5YjNNN3owTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRQ2lHNDYzZnU2RTRmdFcrL1U4b3hWOEIwUmRYZXdYWVVCcE1xL0YrZkVQQ0FJaEFQL2xmeGY5SGF3TGpoNTkKSXZBbTBaSDJ2czA3Vm9qeVlSb2tCbHFJTEVxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhTeFV6WjZvamttWTY1MkpMVjlQKzRlWjlyeUo5czUySExYYW1pY3ZNVDJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWk9iRWZ5RFNwcE1md1FSQTZCUHlmS1E4T3gzWWhlK0pFeEFpdjcwMXJFRDlKZWdWTGhxQQpKNjJvd3ZRaCtRZi85c0RaQml6YlNnYXVjY08xZmFQanRBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5QYUtZdE83ZU03ZVVQYkNDWlJueDcwMVJHbVMybGJJcUVtNVFKMi9JbXNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOUwyaFJRb0ZnMUhVSHcvNFVick4vcFJ4blZDN1pRWUlCQWVLZG5JeWJiWHM5TVR3QSs5Ywo1NWdqN3REMWtkSUNKQnhlZlBUdjFzSk9BYk9GUHhQWXZ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.27.1 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 167.235.107.29\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.27.1 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.27.1 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.27.1 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUpZbnJXb2tUZEpHZ2Vad2lGMjFHbXd3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1qTXlNREl5TkRoYUZ3MHpNekExTWpBeU1ESXlORGhhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTenVGTTJNdGw5CnBoM1FaYlhtOXk1NFg1WDFvU3NhUHdFVGpKSkFvRTdTdUhFRnJnKzlzbkVwVElySFR3emp3UGpTTUNrVWVBenkKVjRTdDVDUFNrM0wrbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9WRlA5OXVaM3E2CjZNTTc1RktaY3grazd2ZWlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNWbG9VQkk1SGhtd3FkMkdyS0hxVFQKdXJtdmZ5cDM2VHNtamZoVzYwcVJaQUlnYmxKMEhzYVpobjR5Yk9POGJub08wWk5QeTIxWmZZQ3p2UXR4Y2YweApTYUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVhMXRWNGlEQ2NKQld5emxZdmVIOUFITnVPUS9QQU5jTFl6Q2pKM0QzMmtvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFczdoVE5qTFpmYVlkMEdXMTV2Y3VlRitWOWFFckdqOEJFNHlTUUtCTzByaHhCYTRQdmJKeApLVXlLeDA4TTQ4RDQwakFwRkhnTThsZUVyZVFqMHBOeS9nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.8-arm64\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUpZbnJXb2tUZEpHZ2Vad2lGMjFHbXd3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1qTXlNREl5TkRoYUZ3MHpNekExTWpBeU1ESXlORGhhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTenVGTTJNdGw5CnBoM1FaYlhtOXk1NFg1WDFvU3NhUHdFVGpKSkFvRTdTdUhFRnJnKzlzbkVwVElySFR3emp3UGpTTUNrVWVBenkKVjRTdDVDUFNrM0wrbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9WRlA5OXVaM3E2CjZNTTc1RktaY3grazd2ZWlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNWbG9VQkk1SGhtd3FkMkdyS0hxVFQKdXJtdmZ5cDM2VHNtamZoVzYwcVJaQUlnYmxKMEhzYVpobjR5Yk9POGJub08wWk5QeTIxWmZZQ3p2UXR4Y2YweApTYUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVhMXRWNGlEQ2NKQld5emxZdmVIOUFITnVPUS9QQU5jTFl6Q2pKM0QzMmtvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFczdoVE5qTFpmYVlkMEdXMTV2Y3VlRitWOWFFckdqOEJFNHlTUUtCTzByaHhCYTRQdmJKeApLVXlLeDA4TTQ4RDQwakFwRkhnTThsZUVyZVFqMHBOeS9nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVAvK1Z2d3B3N3ZWNWpIbjMzc0pSVTBsTW1qQXg0WkJPMEx1UnVoeTd5YmFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaTJWY1F2cGdKQzRtUERGQWRUbGNLSU44enZ6RTVrK3hZTWhqWHpGaWhSMmE4MjQ0aE05ZworUXdlbUU1Y3h2aHp5TEFjVVludjh2NExSeWlDRUtlclVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQU9WVFBmQmZmaGpQdFNIZUxwNFk4Vmd3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJrNXNSL0lOS21reC9CQkVEb0UvSjhwRHc3SGRpRjc0a1RFQ0svdlRXc1FQMGw2QlV1CkdvQW5yYWpDOUNINUIvLzJ3TmtHTE50S0JxNXh3N1Y5bytPMG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTHZRRUxJRFlTR2lxaG8ycG5lZTg5YjNNN3owTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRQ2lHNDYzZnU2RTRmdFcrL1U4b3hWOEIwUmRYZXdYWVVCcE1xL0YrZkVQQ0FJaEFQL2xmeGY5SGF3TGpoNTkKSXZBbTBaSDJ2czA3Vm9qeVlSb2tCbHFJTEVxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhTeFV6WjZvamttWTY1MkpMVjlQKzRlWjlyeUo5czUySExYYW1pY3ZNVDJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWk9iRWZ5RFNwcE1md1FSQTZCUHlmS1E4T3gzWWhlK0pFeEFpdjcwMXJFRDlKZWdWTGhxQQpKNjJvd3ZRaCtRZi85c0RaQml6YlNnYXVjY08xZmFQanRBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5QYUtZdE83ZU03ZVVQYkNDWlJueDcwMVJHbVMybGJJcUVtNVFKMi9JbXNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOUwyaFJRb0ZnMUhVSHcvNFVick4vcFJ4blZDN1pRWUlCQWVLZG5JeWJiWHM5TVR3QSs5Ywo1NWdqN3REMWtkSUNKQnhlZlBUdjFzSk9BYk9GUHhQWXZ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3JadzI3WDRVK3R5OWJRUTdRV05pUEtONG5QSjRYdkNhbjBaVlFIN1dHNAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "tOqcD_DCf7DanEZj_BWwVdf3ZcxrMsBIaO2tIHYIZtw=",
                "secret": "O4TwUV1Hg9zZuRG5wVtQPx6iK3m0am7n/WKxUa290DA="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "laesce.l7vllw2liq73cirn",
                "secretbox_encryption_secret": "h5peiJEHiNZcgNaoy4GiDnnBGyl1R2Yl36or2zIlBZI="
              },
              "trustdinfo": {
                "token": "oz564y.xjqzal80qp4tmc6k"
              }
            },
            "machine_type": "controlplane",
            "talos_version": "v1.4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_aggregator"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_serviceaccount"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "os"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "etcd"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "cluster"
              },
              {
                "type": "get_attr",
                "value": "secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "secretbox_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "aescbc_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "bootstrap_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "trustdinfo"
              },
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "talos_machine_configuration",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cluster_endpoint": "https://167.235.107.29:6443",
            "cluster_name": "talos-hloud-cluster",
            "config_patches": [
              "machine:\n  kubelet:\n    # OpenEBS Mayastor\n    extraMounts:\n    - destination: /var/openebs/local\n      options:\n      - bind\n      - rshared\n      - rw\n      source: /var/openebs/local\n      type: bind\n    extraArgs:\n      node-labels: openebs.io/engine=mayastor\n    nodeIP:\n      validSubnets:\n        - 10.0.0.0/24\n  # Mayastor requires vm.nr_hugepages \n  sysctls:\n    vm.nr_hugepages: \"2048\"\n  # Setup hetzner ntp server.\n  time:\n  #     disabled: false # Indicates if the time service is disabled for the machine.\n  #     # Specifies time (NTP) servers to use for setting the system time.\n      servers:\n          - ntp1.hetzner.de\n          - ntp2.hetzner.com\n          - ntp3.hetzner.net\n          - 0.de.pool.ntp.org\n          - 1.de.pool.ntp.org\n          - time.cloudflare.com\n"
            ],
            "docs": true,
            "examples": true,
            "id": "talos-hloud-cluster",
            "kubernetes_version": "1.27.1",
            "machine_configuration": "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true # Indicates whether to pull the machine config upon every boot.\n# Provides machine specific configuration options.\nmachine:\n    type: worker # Defines the role of the machine within the cluster.\n    token: oz564y.xjqzal80qp4tmc6k # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs: []\n    #   # Uncomment this to enable SANs.\n    #   - 10.0.0.10\n    #   - 172.16.0.10\n    #   - 192.168.0.10\n\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.27.1 # The `image` field is an optional reference to an alternative kubelet image.\n        # The `extraArgs` field is used to provide additional flags to the kubelet.\n        extraArgs:\n            node-labels: openebs.io/engine=mayastor\n        # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        extraMounts:\n            - destination: /var/openebs/local\n              type: bind\n              source: /var/openebs/local\n              options:\n                - bind\n                - rshared\n                - rw\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        nodeIP:\n            # The `validSubnets` field configures the networks to pick kubelet node IP from.\n            validSubnets:\n                - 10.0.0.0/24\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n    # Provides machine specific network configuration options.\n    network: {}\n    # # `interfaces` is used to define the network interface configuration.\n    # interfaces:\n    #     - interface: eth0 # The interface name.\n    #       # Assigns static IP addresses to the interface.\n    #       addresses:\n    #         - 192.168.2.0/24\n    #       # A list of routes associated with the interface.\n    #       routes:\n    #         - network: 0.0.0.0/0 # The route's network (destination).\n    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).\n    #           metric: 1024 # The optional metric for the route.\n    #       mtu: 1500 # The interface's MTU.\n    #       \n    #       # # Picks a network device using the selector.\n\n    #       # # select a device with bus prefix 00:*.\n    #       # deviceSelector:\n    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #     driver: virtio # Kernel driver, supports matching by wildcard.\n    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n    #       # deviceSelector:\n    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #       driver: virtio # Kernel driver, supports matching by wildcard.\n\n    #       # # Bond specific options.\n    #       # bond:\n    #       #     # The interfaces that make up the bond.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # Picks a network device using the selector.\n    #       #     deviceSelectors:\n    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.\n    #       #           driver: virtio # Kernel driver, supports matching by wildcard.\n    #       #     mode: 802.3ad # A bond option.\n    #       #     lacpRate: fast # A bond option.\n\n    #       # # Bridge specific options.\n    #       # bridge:\n    #       #     # The interfaces that make up the bridge.\n    #       #     interfaces:\n    #       #         - eth0\n    #       #         - eth1\n    #       #     # A bridge option.\n    #       #     stp:\n    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n    #       # # Indicates if DHCP should be used to configure the interface.\n    #       # dhcp: true\n\n    #       # # DHCP specific options.\n    #       # dhcpOptions:\n    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n    #       # # Wireguard specific configuration.\n\n    #       # # wireguard server example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     listenPort: 51111 # Specifies a device's listening port.\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n    #       # # wireguard peer example\n    #       # wireguard:\n    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n    #       #     # Specifies a list of peer configurations to apply to a device.\n    #       #     peers:\n    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n    #       #           allowedIPs:\n    #       #             - 192.168.1.0/24\n\n    #       # # Virtual (shared) IP address configuration.\n\n    #       # # layer2 vip example\n    #       # vip:\n    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.\n\n    # # Used to statically set the nameservers for the machine.\n    # nameservers:\n    #     - 8.8.8.8\n    #     - 1.1.1.1\n\n    # # Allows for extra entries to be added to the `/etc/hosts` file\n    # extraHostEntries:\n    #     - ip: 192.168.1.100 # The IP of the host.\n    #       # The host alias.\n    #       aliases:\n    #         - example\n    #         - example.domain.tld\n\n    # # Configures KubeSpan feature.\n    # kubespan:\n    #     enabled: true # Enable the KubeSpan feature.\n\n    # Used to provide instructions for installations.\n    install:\n        disk: /dev/sda # The disk used for installations.\n        image: ghcr.io/siderolabs/installer:v1.4.0 # Allows for supplying the image used to perform the installation.\n        bootloader: true # Indicates if a bootloader should be installed.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/\u003cdev\u003e/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n\n        # # Allows for supplying additional system extension images to install on top of base Talos image.\n        # extensions:\n        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.\n    # Used to configure the machine's time settings.\n    time:\n        # Specifies time (NTP) servers to use for setting the system time.\n        servers:\n            - ntp1.hetzner.de\n            - ntp2.hetzner.com\n            - ntp3.hetzner.net\n            - 0.de.pool.ntp.org\n            - 1.de.pool.ntp.org\n            - time.cloudflare.com\n    # Used to configure the machine's sysctls.\n    sysctls:\n        vm.nr_hugepages: \"2048\"\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS \u0026 auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Used to partition, format and mount additional disks.\n\n    # # MachineDisks list example.\n    # disks:\n    #     - device: /dev/sdb # The name of the disk to use.\n    #       # A list of partitions to create on the disk.\n    #       partitions:\n    #         - mountpoint: /var/mnt/extra # Where to mount the partition.\n    #           \n    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.\n\n    #           # # Human readable representation.\n    #           # size: 100 MB\n    #           # # Precise value in bytes.\n    #           # size: 1073741824\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Configures the node labels for the machine.\n\n    # # node labels example.\n    # nodeLabels:\n    #     exampleLabel: exampleLabelValue\n# Provides cluster specific configuration options.\ncluster:\n    id: tOqcD_DCf7DanEZj_BWwVdf3ZcxrMsBIaO2tIHYIZtw= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: O4TwUV1Hg9zZuRG5wVtQPx6iK3m0am7n/WKxUa290DA= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://167.235.107.29:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: laesce.l7vllw2liq73cirn # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: \"\"\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # secretboxEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n\n    # # AggregatorCA example.\n    # aggregatorCA:\n    #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # The base64 encoded private key for service account token generation.\n\n    # # AggregatorCA example.\n    # serviceAccount:\n    #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n\n    # # API server specific configuration options.\n    # apiServer:\n    #     image: registry.k8s.io/kube-apiserver:v1.27.1 # The container image used in the API server manifest.\n    #     # Extra arguments to supply to the API server.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n    #         http2-max-streams-per-connection: \"32\"\n    #     # Extra certificate subject alternative names for the API server's certificate.\n    #     certSANs:\n    #         - 1.2.3.4\n    #         - 4.5.6.7\n    #     # Configure the API server admission plugins.\n    #     admissionControl:\n    #         - name: PodSecurity # Name is the name of the admission controller.\n    #           # Configuration is an embedded configuration object to be used as the plugin's\n    #           configuration:\n    #             apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n    #             defaults:\n    #                 audit: restricted\n    #                 audit-version: latest\n    #                 enforce: baseline\n    #                 enforce-version: latest\n    #                 warn: restricted\n    #                 warn-version: latest\n    #             exemptions:\n    #                 namespaces:\n    #                     - kube-system\n    #                 runtimeClasses: []\n    #                 usernames: []\n    #             kind: PodSecurityConfiguration\n    #     # Configure the API server audit policy.\n    #     auditPolicy:\n    #         apiVersion: audit.k8s.io/v1\n    #         kind: Policy\n    #         rules:\n    #             - level: Metadata\n\n    # # Controller manager server specific configuration options.\n    # controllerManager:\n    #     image: registry.k8s.io/kube-controller-manager:v1.27.1 # The container image used in the controller manager manifest.\n    #     # Extra arguments to supply to the controller manager.\n    #     extraArgs:\n    #         feature-gates: ServerSideApply=true\n\n    # # Kube-proxy server-specific configuration options\n    # proxy:\n    #     disabled: false # Disable kube-proxy deployment on cluster bootstrap.\n    #     image: registry.k8s.io/kube-proxy:v1.27.1 # The container image used in the kube-proxy manifest.\n    #     mode: ipvs # proxy mode of kube-proxy.\n    #     # Extra arguments to supply to kube-proxy.\n    #     extraArgs:\n    #         proxy-mode: iptables\n\n    # # Scheduler server specific configuration options.\n    # scheduler:\n    #     image: registry.k8s.io/kube-scheduler:v1.27.1 # The container image used in the scheduler manifest.\n    #     # Extra arguments to supply to the scheduler.\n    #     extraArgs:\n    #         feature-gates: AllBeta=true\n\n    # # Etcd specific configuration options.\n    # etcd:\n    #     image: gcr.io/etcd-development/etcd:v3.5.8-arm64 # The container image used to create the etcd service.\n    #     # The `ca` is the root certificate authority of the PKI.\n    #     ca:\n    #         crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #         key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #     # Extra arguments to supply to etcd.\n    #     extraArgs:\n    #         election-timeout: \"5000\"\n    #     # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n    #     advertisedSubnets:\n    #         - 10.0.0.0/8\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: docker.io/coredns/coredns:1.10.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A list of urls that point to additional manifests.\n    # extraManifests:\n    #     - https://www.example.com/manifest1.yaml\n    #     - https://www.example.com/manifest2.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # A list of inline Kubernetes manifests.\n    # inlineManifests:\n    #     - name: namespace-ci # Name of the manifest.\n    #       contents: |- # Manifest contents as a string.\n    #         apiVersion: v1\n    #         kind: Namespace\n    #         metadata:\n    #         \tname: ci\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUpZbnJXb2tUZEpHZ2Vad2lGMjFHbXd3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1qTXlNREl5TkRoYUZ3MHpNekExTWpBeU1ESXlORGhhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTenVGTTJNdGw5CnBoM1FaYlhtOXk1NFg1WDFvU3NhUHdFVGpKSkFvRTdTdUhFRnJnKzlzbkVwVElySFR3emp3UGpTTUNrVWVBenkKVjRTdDVDUFNrM0wrbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9WRlA5OXVaM3E2CjZNTTc1RktaY3grazd2ZWlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNWbG9VQkk1SGhtd3FkMkdyS0hxVFQKdXJtdmZ5cDM2VHNtamZoVzYwcVJaQUlnYmxKMEhzYVpobjR5Yk9POGJub08wWk5QeTIxWmZZQ3p2UXR4Y2YweApTYUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVhMXRWNGlEQ2NKQld5emxZdmVIOUFITnVPUS9QQU5jTFl6Q2pKM0QzMmtvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFczdoVE5qTFpmYVlkMEdXMTV2Y3VlRitWOWFFckdqOEJFNHlTUUtCTzByaHhCYTRQdmJKeApLVXlLeDA4TTQ4RDQwakFwRkhnTThsZUVyZVFqMHBOeS9nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVAvK1Z2d3B3N3ZWNWpIbjMzc0pSVTBsTW1qQXg0WkJPMEx1UnVoeTd5YmFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaTJWY1F2cGdKQzRtUERGQWRUbGNLSU44enZ6RTVrK3hZTWhqWHpGaWhSMmE4MjQ0aE05ZworUXdlbUU1Y3h2aHp5TEFjVVludjh2NExSeWlDRUtlclVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQU9WVFBmQmZmaGpQdFNIZUxwNFk4Vmd3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJrNXNSL0lOS21reC9CQkVEb0UvSjhwRHc3SGRpRjc0a1RFQ0svdlRXc1FQMGw2QlV1CkdvQW5yYWpDOUNINUIvLzJ3TmtHTE50S0JxNXh3N1Y5bytPMG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTHZRRUxJRFlTR2lxaG8ycG5lZTg5YjNNN3owTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRQ2lHNDYzZnU2RTRmdFcrL1U4b3hWOEIwUmRYZXdYWVVCcE1xL0YrZkVQQ0FJaEFQL2xmeGY5SGF3TGpoNTkKSXZBbTBaSDJ2czA3Vm9qeVlSb2tCbHFJTEVxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhTeFV6WjZvamttWTY1MkpMVjlQKzRlWjlyeUo5czUySExYYW1pY3ZNVDJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWk9iRWZ5RFNwcE1md1FSQTZCUHlmS1E4T3gzWWhlK0pFeEFpdjcwMXJFRDlKZWdWTGhxQQpKNjJvd3ZRaCtRZi85c0RaQml6YlNnYXVjY08xZmFQanRBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5QYUtZdE83ZU03ZVVQYkNDWlJueDcwMVJHbVMybGJJcUVtNVFKMi9JbXNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOUwyaFJRb0ZnMUhVSHcvNFVick4vcFJ4blZDN1pRWUlCQWVLZG5JeWJiWHM5TVR3QSs5Ywo1NWdqN3REMWtkSUNKQnhlZlBUdjFzSk9BYk9GUHhQWXZ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3JadzI3WDRVK3R5OWJRUTdRV05pUEtONG5QSjRYdkNhbjBaVlFIN1dHNAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "tOqcD_DCf7DanEZj_BWwVdf3ZcxrMsBIaO2tIHYIZtw=",
                "secret": "O4TwUV1Hg9zZuRG5wVtQPx6iK3m0am7n/WKxUa290DA="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "laesce.l7vllw2liq73cirn",
                "secretbox_encryption_secret": "h5peiJEHiNZcgNaoy4GiDnnBGyl1R2Yl36or2zIlBZI="
              },
              "trustdinfo": {
                "token": "oz564y.xjqzal80qp4tmc6k"
              }
            },
            "machine_type": "worker",
            "talos_version": "v1.4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "cluster"
              },
              {
                "type": "get_attr",
                "value": "secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "secretbox_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "aescbc_encryption_secret"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "secrets"
              },
              {
                "type": "get_attr",
                "value": "bootstrap_token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "trustdinfo"
              },
              {
                "type": "get_attr",
                "value": "token"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_aggregator"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s_serviceaccount"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "os"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "etcd"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "machine_secrets"
              },
              {
                "type": "get_attr",
                "value": "certs"
              },
              {
                "type": "get_attr",
                "value": "k8s"
              },
              {
                "type": "get_attr",
                "value": "key"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_load_balancer",
      "name": "controlplane_load_balancer",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "algorithm": [
              {
                "type": "round_robin"
              }
            ],
            "delete_protection": false,
            "id": "1276726",
            "ipv4": "167.235.107.29",
            "ipv6": "2a01:4f8:1c1d:527::1",
            "labels": {},
            "load_balancer_type": "lb11",
            "location": "nbg1",
            "name": "talos-lb",
            "network_id": 2922471,
            "network_ip": "10.0.0.2",
            "network_zone": "eu-central",
            "target": [
              {
                "server_id": 32868828,
                "type": "server",
                "use_private_ip": false
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_load_balancer_network",
      "name": "srvnetwork",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "enable_public_interface": true,
            "id": "1276726-2922471",
            "ip": "10.0.0.2",
            "load_balancer_id": 1276726,
            "network_id": 2922471,
            "subnet_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_load_balancer_service",
      "name": "controlplane_load_balancer_service_kubectl",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "destination_port": 6443,
            "health_check": [
              {
                "http": [],
                "interval": 15,
                "port": 6443,
                "protocol": "tcp",
                "retries": 3,
                "timeout": 10
              }
            ],
            "http": [],
            "id": "1276726__6443",
            "listen_port": 6443,
            "load_balancer_id": "1276726",
            "protocol": "tcp",
            "proxyprotocol": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "hcloud_load_balancer.controlplane_load_balancer"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_load_balancer_service",
      "name": "controlplane_load_balancer_service_mayastor",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "destination_port": 30011,
            "health_check": [
              {
                "http": [],
                "interval": 15,
                "port": 30011,
                "protocol": "tcp",
                "retries": 3,
                "timeout": 10
              }
            ],
            "http": [],
            "id": "1276726__30011",
            "listen_port": 30011,
            "load_balancer_id": "1276726",
            "protocol": "tcp",
            "proxyprotocol": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "hcloud_load_balancer.controlplane_load_balancer"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_load_balancer_service",
      "name": "controlplane_load_balancer_service_talosctl",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "destination_port": 50000,
            "health_check": [
              {
                "http": [],
                "interval": 15,
                "port": 50000,
                "protocol": "tcp",
                "retries": 3,
                "timeout": 10
              }
            ],
            "http": [],
            "id": "1276726__50000",
            "listen_port": 50000,
            "load_balancer_id": "1276726",
            "protocol": "tcp",
            "proxyprotocol": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "hcloud_load_balancer.controlplane_load_balancer"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_load_balancer_target",
      "name": "load_balancer_target",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lb-srv-tgt-32868828-1276726",
            "ip": null,
            "label_selector": null,
            "load_balancer_id": 1276726,
            "server_id": 32868828,
            "type": "server",
            "use_private_ip": true
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.talos_machine_configuration.controlplane",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet",
            "hcloud_server.controlplane_server",
            "talos_machine_secrets.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_network",
      "name": "network",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "delete_protection": false,
            "id": "2922471",
            "ip_range": "10.0.0.0/24",
            "labels": {},
            "name": "talos-network"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_network_subnet",
      "name": "subnet",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway": "10.0.0.1",
            "id": "2922471-10.0.0.0/24",
            "ip_range": "10.0.0.0/24",
            "network_id": 2922471,
            "network_zone": "eu-central",
            "type": "cloud",
            "vswitch_id": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "hcloud_network.network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_server",
      "name": "controlplane_server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [],
            "id": "32868828",
            "ignore_remote_firewall_ids": false,
            "image": "112056318",
            "ipv4_address": "91.107.214.111",
            "ipv6_address": "2a01:4f8:c17:cb8f::1",
            "ipv6_network": "2a01:4f8:c17:cb8f::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "type": "talos-controlplane"
            },
            "location": "fsn1",
            "name": "talos-controlplane",
            "network": [
              {
                "alias_ips": [],
                "ip": "10.0.0.3",
                "mac_address": "86:00:00:48:b4:dc",
                "network_id": 2922471
              }
            ],
            "placement_group_id": null,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cpx31",
            "ssh_keys": null,
            "status": "running",
            "timeouts": null,
            "user_data": "rF7A1bYgbTOWf7yP1MHd81/YpKU="
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "user_data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.talos_machine_configuration.controlplane",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet",
            "talos_machine_secrets.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_server",
      "name": "worker_server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": "1",
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [],
            "id": "32868829",
            "ignore_remote_firewall_ids": false,
            "image": "112056318",
            "ipv4_address": "49.12.208.182",
            "ipv6_address": "2a01:4f8:c012:b8ff::1",
            "ipv6_network": "2a01:4f8:c012:b8ff::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "type": "talos-worker"
            },
            "location": "fsn1",
            "name": "talos-worker-1",
            "network": [
              {
                "alias_ips": [],
                "ip": "10.0.0.4",
                "mac_address": "86:00:00:48:b4:de",
                "network_id": 2922471
              }
            ],
            "placement_group_id": null,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cpx31",
            "ssh_keys": null,
            "status": "running",
            "timeouts": null,
            "user_data": "xw0jYSzM8VsP1ANmEiZgMHT9xeY="
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "user_data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.talos_machine_configuration.worker",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet"
          ]
        },
        {
          "index_key": "2",
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [],
            "id": "32868826",
            "ignore_remote_firewall_ids": false,
            "image": "112056318",
            "ipv4_address": "49.12.242.180",
            "ipv6_address": "2a01:4f8:c17:97e::1",
            "ipv6_network": "2a01:4f8:c17:97e::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "type": "talos-worker"
            },
            "location": "fsn1",
            "name": "talos-worker-2",
            "network": [
              {
                "alias_ips": [],
                "ip": "10.0.0.5",
                "mac_address": "86:00:00:48:b4:df",
                "network_id": 2922471
              }
            ],
            "placement_group_id": null,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cpx31",
            "ssh_keys": null,
            "status": "running",
            "timeouts": null,
            "user_data": "xw0jYSzM8VsP1ANmEiZgMHT9xeY="
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "user_data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.talos_machine_configuration.worker",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet"
          ]
        },
        {
          "index_key": "3",
          "schema_version": 0,
          "attributes": {
            "allow_deprecated_images": false,
            "backup_window": "",
            "backups": false,
            "datacenter": "fsn1-dc14",
            "delete_protection": false,
            "firewall_ids": [],
            "id": "32868827",
            "ignore_remote_firewall_ids": false,
            "image": "112056318",
            "ipv4_address": "168.119.183.135",
            "ipv6_address": "2a01:4f8:c012:761f::1",
            "ipv6_network": "2a01:4f8:c012:761f::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "type": "talos-worker"
            },
            "location": "fsn1",
            "name": "talos-worker-3",
            "network": [
              {
                "alias_ips": [],
                "ip": "10.0.0.6",
                "mac_address": "86:00:00:48:b4:dd",
                "network_id": 2922471
              }
            ],
            "placement_group_id": null,
            "public_net": [],
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cpx31",
            "ssh_keys": null,
            "status": "running",
            "timeouts": null,
            "user_data": "xw0jYSzM8VsP1ANmEiZgMHT9xeY="
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "user_data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.talos_machine_configuration.worker",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_volume",
      "name": "volumes",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": "1",
          "schema_version": 0,
          "attributes": {
            "automount": null,
            "delete_protection": false,
            "format": null,
            "id": "32348656",
            "labels": {},
            "linux_device": "/dev/disk/by-id/scsi-0HC_Volume_32348656",
            "location": "fsn1",
            "name": "talos-worker-1-volume",
            "server_id": 32868829,
            "size": 10
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.talos_machine_configuration.worker",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet",
            "hcloud_server.worker_server",
            "talos_machine_secrets.this"
          ]
        },
        {
          "index_key": "2",
          "schema_version": 0,
          "attributes": {
            "automount": null,
            "delete_protection": false,
            "format": null,
            "id": "32348657",
            "labels": {},
            "linux_device": "/dev/disk/by-id/scsi-0HC_Volume_32348657",
            "location": "fsn1",
            "name": "talos-worker-2-volume",
            "server_id": 32868826,
            "size": 10
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.talos_machine_configuration.worker",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet",
            "hcloud_server.worker_server",
            "talos_machine_secrets.this"
          ]
        },
        {
          "index_key": "3",
          "schema_version": 0,
          "attributes": {
            "automount": null,
            "delete_protection": false,
            "format": null,
            "id": "32348655",
            "labels": {},
            "linux_device": "/dev/disk/by-id/scsi-0HC_Volume_32348655",
            "location": "fsn1",
            "name": "talos-worker-3-volume",
            "server_id": 32868827,
            "size": 10
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.talos_machine_configuration.worker",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet",
            "hcloud_server.worker_server",
            "talos_machine_secrets.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_bootstrap",
      "name": "bootstrap",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEJsUEhZSkhmWlo5ZFluM0VUeW5MZXRNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTh2V0V2ZmhueW1SVjl6dnp6WSt4eVlJMmxRVFR3UlRXCk5ObTQ1M1Nad1UyalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU1MzdnIxQkJSQ1FXKzM5L0RCYUxtMFpNVjhaekFGQmdNclpYQURRUUJjKzhDTQpEejVVQW1uOVNHa0xlZFhYbmovbWpYbG1zUEZEU3ROdzRraWlhcTA0anFKMFNMWjhRQklENDhzV1ByUytJRy9OCkNoQnd3R2xHcXR6UHpKRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3kxYmh2bDc5RWV4MW0rdG4vMGJyajRzcDdPRWJ1QjNxbWxWb3pyMm9SZAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "endpoint": "91.107.214.111",
            "id": "machine_bootstrap",
            "node": "91.107.214.111",
            "timeouts": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "client_configuration"
              },
              {
                "type": "get_attr",
                "value": "client_key"
              }
            ]
          ],
          "dependencies": [
            "data.talos_machine_configuration.controlplane",
            "hcloud_load_balancer.controlplane_load_balancer",
            "hcloud_network.network",
            "hcloud_network_subnet.subnet",
            "hcloud_server.controlplane_server",
            "talos_machine_secrets.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "talos_machine_secrets",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/siderolabs/talos\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "client_configuration": {
              "ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
              "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJLRENCMjZBREFnRUNBaEJsUEhZSkhmWlo5ZFluM0VUeW5MZXRNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CTXhFVEFQQmdOVgpCQW9UQ0c5ek9tRmtiV2x1TUNvd0JRWURLMlZ3QXlFQTh2V0V2ZmhueW1SVjl6dnp6WSt4eVlJMmxRVFR3UlRXCk5ObTQ1M1Nad1UyalNEQkdNQTRHQTFVZER3RUIvd1FFQXdJSGdEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBZkJnTlZIU01FR0RBV2dCU1MzdnIxQkJSQ1FXKzM5L0RCYUxtMFpNVjhaekFGQmdNclpYQURRUUJjKzhDTQpEejVVQW1uOVNHa0xlZFhYbmovbWpYbG1zUEZEU3ROdzRraWlhcTA0anFKMFNMWjhRQklENDhzV1ByUytJRy9OCkNoQnd3R2xHcXR6UHpKRUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
              "client_key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3kxYmh2bDc5RWV4MW0rdG4vMGJyajRzcDdPRWJ1QjNxbWxWb3pyMm9SZAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
            },
            "id": "machine_secrets",
            "machine_secrets": {
              "certs": {
                "etcd": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNTZ0F3SUJBZ0lSQUpZbnJXb2tUZEpHZ2Vad2lGMjFHbXd3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FWlhSalpEQWVGdzB5TXpBMU1qTXlNREl5TkRoYUZ3MHpNekExTWpBeU1ESXlORGhhTUE4eApEVEFMQmdOVkJBb1RCR1YwWTJRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTenVGTTJNdGw5CnBoM1FaYlhtOXk1NFg1WDFvU3NhUHdFVGpKSkFvRTdTdUhFRnJnKzlzbkVwVElySFR3emp3UGpTTUNrVWVBenkKVjRTdDVDUFNrM0wrbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSApBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9WRlA5OXVaM3E2CjZNTTc1RktaY3grazd2ZWlNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNWbG9VQkk1SGhtd3FkMkdyS0hxVFQKdXJtdmZ5cDM2VHNtamZoVzYwcVJaQUlnYmxKMEhzYVpobjR5Yk9POGJub08wWk5QeTIxWmZZQ3p2UXR4Y2YweApTYUE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVhMXRWNGlEQ2NKQld5emxZdmVIOUFITnVPUS9QQU5jTFl6Q2pKM0QzMmtvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFczdoVE5qTFpmYVlkMEdXMTV2Y3VlRitWOWFFckdqOEJFNHlTUUtCTzByaHhCYTRQdmJKeApLVXlLeDA4TTQ4RDQwakFwRkhnTThsZUVyZVFqMHBOeS9nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRZWJEbDdTa3ZCVU05MWdXUFBtYW1aREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRFV5TXpJd01qSTBPRm9YRFRNek1EVXlNREl3TWpJMApPRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSXRsWEVMNllDUXVKand4UUhVNVhDaURmTTc4eE9aUHNXRElZMTh4WW9VZG12TnVPSVRQWVBrTUhwaE8KWE1iNGM4aXdIRkdKNy9MK0MwY29naENucTFDallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVUzMFRwY0xZNEFSTVU2eDNORWh2ZWJEVFdQV0F3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnZlpFN3JKV0UKY0pDclQxTjdiK0VSeHJvblJxVHBiQlZSbTIwSFgrZm5KeDBDSVFDdGt5Z1MvNjhnRnJyckRSYStXa0J4K3ZxeQprV0FYKzVuYUdkNlJkNmxSNnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVAvK1Z2d3B3N3ZWNWpIbjMzc0pSVTBsTW1qQXg0WkJPMEx1UnVoeTd5YmFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaTJWY1F2cGdKQzRtUERGQWRUbGNLSU44enZ6RTVrK3hZTWhqWHpGaWhSMmE4MjQ0aE05ZworUXdlbUU1Y3h2aHp5TEFjVVludjh2NExSeWlDRUtlclVBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_aggregator": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQU9WVFBmQmZmaGpQdFNIZUxwNFk4Vmd3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVJrNXNSL0lOS21reC9CQkVEb0UvSjhwRHc3SGRpRjc0a1RFQ0svdlRXc1FQMGw2QlV1CkdvQW5yYWpDOUNINUIvLzJ3TmtHTE50S0JxNXh3N1Y5bytPMG8yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTHZRRUxJRFlTR2lxaG8ycG5lZTg5YjNNN3owTUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRQ2lHNDYzZnU2RTRmdFcrL1U4b3hWOEIwUmRYZXdYWVVCcE1xL0YrZkVQQ0FJaEFQL2xmeGY5SGF3TGpoNTkKSXZBbTBaSDJ2czA3Vm9qeVlSb2tCbHFJTEVxYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhTeFV6WjZvamttWTY1MkpMVjlQKzRlWjlyeUo5czUySExYYW1pY3ZNVDJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWk9iRWZ5RFNwcE1md1FSQTZCUHlmS1E4T3gzWWhlK0pFeEFpdjcwMXJFRDlKZWdWTGhxQQpKNjJvd3ZRaCtRZi85c0RaQml6YlNnYXVjY08xZmFQanRBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "k8s_serviceaccount": {
                  "key": "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSU5QYUtZdE83ZU03ZVVQYkNDWlJueDcwMVJHbVMybGJJcUVtNVFKMi9JbXNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFOUwyaFJRb0ZnMUhVSHcvNFVick4vcFJ4blZDN1pRWUlCQWVLZG5JeWJiWHM5TVR3QSs5Ywo1NWdqN3REMWtkSUNKQnhlZlBUdjFzSk9BYk9GUHhQWXZ3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
                },
                "os": {
                  "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEFKejc2aWFnTVNwSXpSa2w5WVp1TXlNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU16QTFNak15TURJeU5EaGFGdzB6TXpBMU1qQXlNREl5TkRoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBZDdkeVFqaUpNWTVRK1IzeEN6a1BiRGMyTi9BR3llc1ltdkl4CkFpRktDS0NqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVa3Q3NjlRUVVRa0Z2dC9mdwp3V2k1dEdURmZHY3dCUVlESzJWd0EwRUErQ1NMc0VrSk43Zk1yUEpzOUNOenpwckFNOVVBQmZIbnptR2ZWZ2lJCmxud1orUGhxQUhOY2xXOEQvK2Z1Mk54b1dySzI2SHgwZTh1V2xVS3padUZYQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                  "key": "LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS3JadzI3WDRVK3R5OWJRUTdRV05pUEtONG5QSjRYdkNhbjBaVlFIN1dHNAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K"
                }
              },
              "cluster": {
                "id": "tOqcD_DCf7DanEZj_BWwVdf3ZcxrMsBIaO2tIHYIZtw=",
                "secret": "O4TwUV1Hg9zZuRG5wVtQPx6iK3m0am7n/WKxUa290DA="
              },
              "secrets": {
                "aescbc_encryption_secret": null,
                "bootstrap_token": "laesce.l7vllw2liq73cirn",
                "secretbox_encryption_secret": "h5peiJEHiNZcgNaoy4GiDnnBGyl1R2Yl36or2zIlBZI="
              },
              "trustdinfo": {
                "token": "oz564y.xjqzal80qp4tmc6k"
              }
            },
            "talos_version": "v1.4"
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
